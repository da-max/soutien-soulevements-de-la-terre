name: Build and deploy pages

on:
  push:
    branches: [main]

jobs:
  build-app:

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm run -r build

      - name: Upload the artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: github-pages
          path: apps/web/dist

  build-api:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.REGISTRY }}/${{ github.repository }}/api:latest
          file: docker/Dockerfile-prod
          build-args: |
            PACKAGE_NAME=api
            



  deploy-app:
    needs: build-app

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v2

  deploy-api:
    needs: build-api

    runs-on: ubuntu-latest
    steps:
      - name: Pull Image from github
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ${{ secrets.REGISTRY }}
            docker pull ${{ github.repository }}/api:latest